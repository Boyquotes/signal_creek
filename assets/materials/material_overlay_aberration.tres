[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=8]
code = "// chromatic aberration
//---------------------------------

shader_type canvas_item;

uniform vec2 r_displacement = vec2(1.0, 1.0);
uniform vec2 g_displacement = vec2(-1.0, -1.0);
uniform vec2 b_displacement = vec2(-1.0, 1.0);

uniform float intensity = 3.0;
uniform float time_intensity = 1.0;

float random (vec2 uv) {
    return sin(TIME) * fract(sin(dot(uv.xy,
        vec2(12.9898,78.233))) * 43758.5453123);
}

void fragment()
{
	vec2 rdisp = r_displacement * random(UV) * intensity;
	vec2 gdisp = g_displacement * random(UV) * intensity;
	vec2 bdisp = b_displacement * random(UV) * intensity;
	
	float r = texture(TEXTURE, UV + vec2(SCREEN_PIXEL_SIZE * rdisp), 0.0).r;
	float g = texture(TEXTURE, UV + vec2(SCREEN_PIXEL_SIZE * gdisp), 0.0).g;
	float b = texture(TEXTURE, UV + vec2(SCREEN_PIXEL_SIZE * bdisp), 0.0).b;
	
	COLOR = vec4(r, g, b, 1.0);
}"

[resource]
shader = SubResource( 8 )
shader_param/r_displacement = Vector2( 0, 0 )
shader_param/g_displacement = Vector2( 0, 0 )
shader_param/b_displacement = Vector2( 0, 0 )
shader_param/intensity = 0.0
shader_param/time_intensity = 1.0
